/*************************************************************
 * get_user_groups.cpp
 * Generated by corpc framework corpc_gen.py
 * Create Time: 2022-12-31 09:55:47
 * This file will not be overwrite althrough protobuf file changed !!!
 * Just write this file while not exist
*************************************************************/

#include <corpc/common/log.h>
#include "GroupService/interface/get_user_groups.h"
#include "GroupService/pb/GroupService.pb.h"
#include "GroupService/dao/group_dao.h"
#include "GroupService/common/business_exception.h"
#include "GroupService/common/const.h"
#include "GroupService/common/error_code.h"
#include "GroupService/dao/user_dao.h"


namespace GroupService {

GetUserGroupsInterface::GetUserGroupsInterface(const ::GetUserGroupsRequest &request, ::GetUserGroupsResponse &response)
    : request_(request), 
    response_(response)
{

}

GetUserGroupsInterface::~GetUserGroupsInterface()
{

}

void GetUserGroupsInterface::run()
{
    //
    // Run your business at here
    // response_.set_ret_code(0);
    // response_.set_res_info("Succ");
    //
    int userid = request_.user_id();

    UserDao userDao;
    User user = userDao.queryUserInfo(userid);
    if (user.getState() == NOT_EXIST_STATE) {
        throw BusinessException(CURRENT_USER_NOT_EXIST, getErrorMsg(CURRENT_USER_NOT_EXIST), __FILE__, __LINE__);
    }

    GroupDao groupDao;
    for (auto &group : groupDao.queryGroups(userid)) {
        ::GroupInfo *groupInfo = response_.add_groups();
        groupInfo->set_id(group.getId());
        groupInfo->set_name(group.getName());
        groupInfo->set_desc(group.getDesc());

        for (const auto &user : group.getUsers()) {
            ::GroupUserInfo *groupUserInfo = groupInfo->add_users();
            groupUserInfo->set_id(user.getId());
            groupUserInfo->set_name(user.getName());

            if (user.getState() == ONLINE_STATE) {
                groupUserInfo->set_state(::UserState::ONLINE);
            }
            else if (user.getState() == OFFLINE_STATE) {
                groupUserInfo->set_state(::UserState::OFFLINE);
            }

            if (user.getRole() == CREATOR_ROLE) {
                groupUserInfo->set_role(::GroupUserRole::CREATOR);
            }
            else if (user.getRole() == NORMAL_ROLE) {
                groupUserInfo->set_role(::GroupUserRole::NORMAL);
            }
        }
    }
}

}